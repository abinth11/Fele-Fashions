swagger: "3.0.0"
basePath: /api/v1
tags:
  - name: Category
    description: The Category API
paths:
  /api/v1/categories/save:
    post:
      summary: Add category
      description: Add a new category.
      tags:
        - Category
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        201:
          description: Successfully added a new category
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Successfully added a new category"
        400:
          description: Bad request, Invalid user input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        401:
          description: Unauthorized, Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        409:
          description: Conflict, A category exists with the same name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/categories:
    get:
      summary: fetch categories
      description: To fetch all available categories.
      tags:
        - Category
      security:
        - apiKey: []
      parameters:
      - name: limit
        in: query
        description: Number of items to return 
        required: true
        schema:
          type: integer
          default: 10
      - name: skip
        in: query
        description: Number of items to skip
        required: true
        schema:
          type: integer
          default: 0
      responses:
        200:
          description: Successfully fetched all categories
          content:
            application/json:
              schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Successfully fetched all categories"
                data:
                type: object
                properties:
                 totalCategories:
                   type: number,
                   example: 10
                 categories:
                      type: array    
                      items:        
                        $ref: "#/components/schemas/Category"
        401:
          description: Unauthorized, Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"  

components:
  schemas:
    Category:
      type: object
      required:
        - categoryName
      properties:
        categoryId:
          type: string 
          description: The auto-generated id of every category
          readOnly: true
        categoryName:
          type: string
          description: Name of the category
          example: "Footwear"
          default: "DefaultCategory"
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true 

    ErrorResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          example: "error"
        message:
          type: string
          example: "An error occurred"

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
  